// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RequestApproved extends ethereum.Event {
  get params(): RequestApproved__Params {
    return new RequestApproved__Params(this);
  }
}

export class RequestApproved__Params {
  _event: RequestApproved;

  constructor(event: RequestApproved) {
    this._event = event;
  }

  get registry(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get requestType(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get recipient(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get recipientIndex(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get index(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get payout(): Address {
    return this._event.parameters[5].value.toAddress();
  }

  get metadataUrl(): string {
    return this._event.parameters[6].value.toString();
  }
}

export class RequestRejected extends ethereum.Event {
  get params(): RequestRejected__Params {
    return new RequestRejected__Params(this);
  }
}

export class RequestRejected__Params {
  _event: RequestRejected;

  constructor(event: RequestRejected) {
    this._event = event;
  }

  get registry(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get requestType(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get recipient(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get recipientIndex(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get index(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get payout(): Address {
    return this._event.parameters[5].value.toAddress();
  }

  get metadataUrl(): string {
    return this._event.parameters[6].value.toString();
  }
}

export class RequestSent extends ethereum.Event {
  get params(): RequestSent__Params {
    return new RequestSent__Params(this);
  }
}

export class RequestSent__Params {
  _event: RequestSent;

  constructor(event: RequestSent) {
    this._event = event;
  }

  get registry(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get requestType(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get recipient(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get recipientIndex(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get index(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get payout(): Address {
    return this._event.parameters[5].value.toAddress();
  }

  get metadataUrl(): string {
    return this._event.parameters[6].value.toString();
  }
}

export class RegistryManager__getRequestResultRequestStruct extends ethereum.Tuple {
  get index(): BigInt {
    return this[0].toBigInt();
  }

  get registry(): Address {
    return this[1].toAddress();
  }

  get requestType(): i32 {
    return this[2].toI32();
  }

  get status(): i32 {
    return this[3].toI32();
  }

  get recipient(): RegistryManager__getRequestResultRequestRecipientStruct {
    return changetype<RegistryManager__getRequestResultRequestRecipientStruct>(
      this[4].toTuple(),
    );
  }
}

export class RegistryManager__getRequestResultRequestRecipientStruct extends ethereum.Tuple {
  get id(): Bytes {
    return this[0].toBytes();
  }

  get metadataUrl(): string {
    return this[1].toString();
  }

  get recipient(): Address {
    return this[2].toAddress();
  }
}

export class RegistryManager extends ethereum.SmartContract {
  static bind(address: Address): RegistryManager {
    return new RegistryManager("RegistryManager", address);
  }

  getRequest(index: BigInt): RegistryManager__getRequestResultRequestStruct {
    let result = super.call(
      "getRequest",
      "getRequest(uint256):((uint256,address,uint8,uint8,(bytes32,string,address)))",
      [ethereum.Value.fromUnsignedBigInt(index)],
    );

    return changetype<RegistryManager__getRequestResultRequestStruct>(
      result[0].toTuple(),
    );
  }

  try_getRequest(
    index: BigInt,
  ): ethereum.CallResult<RegistryManager__getRequestResultRequestStruct> {
    let result = super.tryCall(
      "getRequest",
      "getRequest(uint256):((uint256,address,uint8,uint8,(bytes32,string,address)))",
      [ethereum.Value.fromUnsignedBigInt(index)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<RegistryManager__getRequestResultRequestStruct>(
        value[0].toTuple(),
      ),
    );
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  requestCount(): BigInt {
    let result = super.call("requestCount", "requestCount():(uint256)", []);

    return result[0].toBigInt();
  }

  try_requestCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("requestCount", "requestCount():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get index(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }
}

export class ProcessCall extends ethereum.Call {
  get inputs(): ProcessCall__Inputs {
    return new ProcessCall__Inputs(this);
  }

  get outputs(): ProcessCall__Outputs {
    return new ProcessCall__Outputs(this);
  }
}

export class ProcessCall__Inputs {
  _call: ProcessCall;

  constructor(call: ProcessCall) {
    this._call = call;
  }

  get request(): ProcessCallRequestStruct {
    return changetype<ProcessCallRequestStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }
}

export class ProcessCall__Outputs {
  _call: ProcessCall;

  constructor(call: ProcessCall) {
    this._call = call;
  }
}

export class ProcessCallRequestStruct extends ethereum.Tuple {
  get index(): BigInt {
    return this[0].toBigInt();
  }

  get registry(): Address {
    return this[1].toAddress();
  }

  get requestType(): i32 {
    return this[2].toI32();
  }

  get status(): i32 {
    return this[3].toI32();
  }

  get recipient(): ProcessCallRequestRecipientStruct {
    return changetype<ProcessCallRequestRecipientStruct>(this[4].toTuple());
  }
}

export class ProcessCallRequestRecipientStruct extends ethereum.Tuple {
  get id(): Bytes {
    return this[0].toBytes();
  }

  get metadataUrl(): string {
    return this[1].toString();
  }

  get recipient(): Address {
    return this[2].toAddress();
  }
}

export class RejectCall extends ethereum.Call {
  get inputs(): RejectCall__Inputs {
    return new RejectCall__Inputs(this);
  }

  get outputs(): RejectCall__Outputs {
    return new RejectCall__Outputs(this);
  }
}

export class RejectCall__Inputs {
  _call: RejectCall;

  constructor(call: RejectCall) {
    this._call = call;
  }

  get index(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RejectCall__Outputs {
  _call: RejectCall;

  constructor(call: RejectCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
